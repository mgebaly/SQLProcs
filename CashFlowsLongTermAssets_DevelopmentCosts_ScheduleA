USE [REDFS]
GO
/****** Object:  StoredProcedure [dbo].[CashFlowsLongTermAssets_DevelopmentCosts_ScheduleA]    Script Date: 3/12/2015 1:18:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER proc [dbo].[CashFlowsLongTermAssets_DevelopmentCosts_ScheduleA]
            @PlanningScenarioId int
as
begin tran

declare @PlanningStartDate datetime,@MarketingandSalesEndDate datetime
declare @StartYear int,@EndYear int
declare @ScenarioYears table([Year] int)

select @PlanningStartDate = PlanningStartDate from PlanningScenario where PlanningScenarioId = @PlanningScenarioId
select @MarketingandSalesEndDate = MarketingandSalesEndDate from PlanningScenario where PlanningScenarioId = @PlanningScenarioId

select @StartYear = year(@PlanningStartDate)
select @EndYear = year(@MarketingandSalesEndDate)

;with CTE_ScenarioYears
as
(
  select @StartYear ScenarioDate
  union all
  select ScenarioDate + 1
  from CTE_ScenarioYears
  where ScenarioDate + 1 <= @EndYear
)
insert @ScenarioYears select ScenarioDate [Year] from CTE_ScenarioYears
option (maxrecursion 0)

;with CTE_LTA as
(
select CashFlowsLongTermAssetsId,PlanningScenarioId,[Definition],year(DateRecorded) [Year],DevelopmentCosts,
dbo.UDF_GetScenarioPeriod(PlanningScenarioId,year(DateRecorded)) Years
from CashFlowsLongTermAssets
where PlanningScenarioId = @PlanningScenarioId and DevelopmentCosts <> 0 and IsDeleted = 0
)

select * from CTE_LTA
union
select null,null,null,y.[Year],null,
dbo.UDF_GetScenarioPeriod(@PlanningScenarioId,y.[Year]) Years
from @ScenarioYears y
where y.[Year] not in(select [Year] from CTE_LTA)

if @@error <>0
begin
rollback tran 
return
end
else
begin
commit tran
end
